
GPIO_Peripheral.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000059c  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000760  08000768  00010768  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000760  08000760  00010768  2**0
                  CONTENTS
  4 .ARM          00000000  08000760  08000760  00010768  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000760  08000768  00010768  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000760  08000760  00010760  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000764  08000764  00010764  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010768  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000768  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000768  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010768  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000075b  00000000  00000000  00010798  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000261  00000000  00000000  00010ef3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000d0  00000000  00000000  00011158  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  00011228  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000012f7  00000000  00000000  000112c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000900  00000000  00000000  000125b7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00004b5c  00000000  00000000  00012eb7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00017a13  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000230  00000000  00000000  00017a64  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000748 	.word	0x08000748

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000748 	.word	0x08000748

08000204 <MGPIO_vSetPinMode>:
#include "GPIO_Configuration.h"
#include "GPIO_prv.h"


void MGPIO_vSetPinMode(u8 A_u8PortId,u8 A_u8PinNo ,u8 A_u8Mode)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	4603      	mov	r3, r0
 800020c:	71fb      	strb	r3, [r7, #7]
 800020e:	460b      	mov	r3, r1
 8000210:	71bb      	strb	r3, [r7, #6]
 8000212:	4613      	mov	r3, r2
 8000214:	717b      	strb	r3, [r7, #5]
	switch(A_u8PortId)
 8000216:	79fb      	ldrb	r3, [r7, #7]
 8000218:	2b02      	cmp	r3, #2
 800021a:	d036      	beq.n	800028a <MGPIO_vSetPinMode+0x86>
 800021c:	2b02      	cmp	r3, #2
 800021e:	dc4c      	bgt.n	80002ba <MGPIO_vSetPinMode+0xb6>
 8000220:	2b00      	cmp	r3, #0
 8000222:	d002      	beq.n	800022a <MGPIO_vSetPinMode+0x26>
 8000224:	2b01      	cmp	r3, #1
 8000226:	d018      	beq.n	800025a <MGPIO_vSetPinMode+0x56>
			GPIOC->MODER &= ~(0b11<<(A_u8PinNo*2));
			GPIOC->MODER |= (A_u8Mode<<(A_u8PinNo*2));

			break;
}
}
 8000228:	e047      	b.n	80002ba <MGPIO_vSetPinMode+0xb6>
			GPIOA->MODER &= ~(0b11<<(A_u8PinNo*2));
 800022a:	4b27      	ldr	r3, [pc, #156]	; (80002c8 <MGPIO_vSetPinMode+0xc4>)
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	79ba      	ldrb	r2, [r7, #6]
 8000230:	0052      	lsls	r2, r2, #1
 8000232:	2103      	movs	r1, #3
 8000234:	fa01 f202 	lsl.w	r2, r1, r2
 8000238:	43d2      	mvns	r2, r2
 800023a:	4611      	mov	r1, r2
 800023c:	4a22      	ldr	r2, [pc, #136]	; (80002c8 <MGPIO_vSetPinMode+0xc4>)
 800023e:	400b      	ands	r3, r1
 8000240:	6013      	str	r3, [r2, #0]
			GPIOA->MODER |= (A_u8Mode<<(A_u8PinNo*2));
 8000242:	4b21      	ldr	r3, [pc, #132]	; (80002c8 <MGPIO_vSetPinMode+0xc4>)
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	7979      	ldrb	r1, [r7, #5]
 8000248:	79ba      	ldrb	r2, [r7, #6]
 800024a:	0052      	lsls	r2, r2, #1
 800024c:	fa01 f202 	lsl.w	r2, r1, r2
 8000250:	4611      	mov	r1, r2
 8000252:	4a1d      	ldr	r2, [pc, #116]	; (80002c8 <MGPIO_vSetPinMode+0xc4>)
 8000254:	430b      	orrs	r3, r1
 8000256:	6013      	str	r3, [r2, #0]
			break;
 8000258:	e02f      	b.n	80002ba <MGPIO_vSetPinMode+0xb6>
			GPIOB->MODER &= ~(0b11<<(A_u8PinNo*2));
 800025a:	4b1c      	ldr	r3, [pc, #112]	; (80002cc <MGPIO_vSetPinMode+0xc8>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	79ba      	ldrb	r2, [r7, #6]
 8000260:	0052      	lsls	r2, r2, #1
 8000262:	2103      	movs	r1, #3
 8000264:	fa01 f202 	lsl.w	r2, r1, r2
 8000268:	43d2      	mvns	r2, r2
 800026a:	4611      	mov	r1, r2
 800026c:	4a17      	ldr	r2, [pc, #92]	; (80002cc <MGPIO_vSetPinMode+0xc8>)
 800026e:	400b      	ands	r3, r1
 8000270:	6013      	str	r3, [r2, #0]
			GPIOB->MODER |= (A_u8Mode<<(A_u8PinNo*2));
 8000272:	4b16      	ldr	r3, [pc, #88]	; (80002cc <MGPIO_vSetPinMode+0xc8>)
 8000274:	681b      	ldr	r3, [r3, #0]
 8000276:	7979      	ldrb	r1, [r7, #5]
 8000278:	79ba      	ldrb	r2, [r7, #6]
 800027a:	0052      	lsls	r2, r2, #1
 800027c:	fa01 f202 	lsl.w	r2, r1, r2
 8000280:	4611      	mov	r1, r2
 8000282:	4a12      	ldr	r2, [pc, #72]	; (80002cc <MGPIO_vSetPinMode+0xc8>)
 8000284:	430b      	orrs	r3, r1
 8000286:	6013      	str	r3, [r2, #0]
			break;
 8000288:	e017      	b.n	80002ba <MGPIO_vSetPinMode+0xb6>
			GPIOC->MODER &= ~(0b11<<(A_u8PinNo*2));
 800028a:	4b11      	ldr	r3, [pc, #68]	; (80002d0 <MGPIO_vSetPinMode+0xcc>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	79ba      	ldrb	r2, [r7, #6]
 8000290:	0052      	lsls	r2, r2, #1
 8000292:	2103      	movs	r1, #3
 8000294:	fa01 f202 	lsl.w	r2, r1, r2
 8000298:	43d2      	mvns	r2, r2
 800029a:	4611      	mov	r1, r2
 800029c:	4a0c      	ldr	r2, [pc, #48]	; (80002d0 <MGPIO_vSetPinMode+0xcc>)
 800029e:	400b      	ands	r3, r1
 80002a0:	6013      	str	r3, [r2, #0]
			GPIOC->MODER |= (A_u8Mode<<(A_u8PinNo*2));
 80002a2:	4b0b      	ldr	r3, [pc, #44]	; (80002d0 <MGPIO_vSetPinMode+0xcc>)
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	7979      	ldrb	r1, [r7, #5]
 80002a8:	79ba      	ldrb	r2, [r7, #6]
 80002aa:	0052      	lsls	r2, r2, #1
 80002ac:	fa01 f202 	lsl.w	r2, r1, r2
 80002b0:	4611      	mov	r1, r2
 80002b2:	4a07      	ldr	r2, [pc, #28]	; (80002d0 <MGPIO_vSetPinMode+0xcc>)
 80002b4:	430b      	orrs	r3, r1
 80002b6:	6013      	str	r3, [r2, #0]
			break;
 80002b8:	bf00      	nop
}
 80002ba:	bf00      	nop
 80002bc:	370c      	adds	r7, #12
 80002be:	46bd      	mov	sp, r7
 80002c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c4:	4770      	bx	lr
 80002c6:	bf00      	nop
 80002c8:	40020000 	.word	0x40020000
 80002cc:	40020400 	.word	0x40020400
 80002d0:	40020800 	.word	0x40020800

080002d4 <MGPIO_vSetPinOutputType>:

void MGPIO_vSetPinOutputType(u8 A_u8PortId,u8 A_u8PinNo ,u8 A_u8OutType)
{
 80002d4:	b480      	push	{r7}
 80002d6:	b083      	sub	sp, #12
 80002d8:	af00      	add	r7, sp, #0
 80002da:	4603      	mov	r3, r0
 80002dc:	71fb      	strb	r3, [r7, #7]
 80002de:	460b      	mov	r3, r1
 80002e0:	71bb      	strb	r3, [r7, #6]
 80002e2:	4613      	mov	r3, r2
 80002e4:	717b      	strb	r3, [r7, #5]
	if(A_u8OutType == GPIO_OPENDRAIN)
 80002e6:	797b      	ldrb	r3, [r7, #5]
 80002e8:	2b01      	cmp	r3, #1
 80002ea:	d12a      	bne.n	8000342 <MGPIO_vSetPinOutputType+0x6e>
		{
			switch(A_u8PortId)
 80002ec:	79fb      	ldrb	r3, [r7, #7]
 80002ee:	2b02      	cmp	r3, #2
 80002f0:	d01c      	beq.n	800032c <MGPIO_vSetPinOutputType+0x58>
 80002f2:	2b02      	cmp	r3, #2
 80002f4:	dc57      	bgt.n	80003a6 <MGPIO_vSetPinOutputType+0xd2>
 80002f6:	2b00      	cmp	r3, #0
 80002f8:	d002      	beq.n	8000300 <MGPIO_vSetPinOutputType+0x2c>
 80002fa:	2b01      	cmp	r3, #1
 80002fc:	d00b      	beq.n	8000316 <MGPIO_vSetPinOutputType+0x42>
			case GPIO_PORTC:
				CLR_BIT(GPIOC->OTYPER, A_u8PinNo);
				break;
			}
		}
}
 80002fe:	e052      	b.n	80003a6 <MGPIO_vSetPinOutputType+0xd2>
				SET_BIT(GPIOA->OTYPER, A_u8PinNo);
 8000300:	4b2c      	ldr	r3, [pc, #176]	; (80003b4 <MGPIO_vSetPinOutputType+0xe0>)
 8000302:	685b      	ldr	r3, [r3, #4]
 8000304:	79ba      	ldrb	r2, [r7, #6]
 8000306:	2101      	movs	r1, #1
 8000308:	fa01 f202 	lsl.w	r2, r1, r2
 800030c:	4611      	mov	r1, r2
 800030e:	4a29      	ldr	r2, [pc, #164]	; (80003b4 <MGPIO_vSetPinOutputType+0xe0>)
 8000310:	430b      	orrs	r3, r1
 8000312:	6053      	str	r3, [r2, #4]
				break;
 8000314:	e047      	b.n	80003a6 <MGPIO_vSetPinOutputType+0xd2>
				SET_BIT(GPIOB->OTYPER, A_u8PinNo);
 8000316:	4b28      	ldr	r3, [pc, #160]	; (80003b8 <MGPIO_vSetPinOutputType+0xe4>)
 8000318:	685b      	ldr	r3, [r3, #4]
 800031a:	79ba      	ldrb	r2, [r7, #6]
 800031c:	2101      	movs	r1, #1
 800031e:	fa01 f202 	lsl.w	r2, r1, r2
 8000322:	4611      	mov	r1, r2
 8000324:	4a24      	ldr	r2, [pc, #144]	; (80003b8 <MGPIO_vSetPinOutputType+0xe4>)
 8000326:	430b      	orrs	r3, r1
 8000328:	6053      	str	r3, [r2, #4]
				break;
 800032a:	e03c      	b.n	80003a6 <MGPIO_vSetPinOutputType+0xd2>
				SET_BIT(GPIOC->OTYPER, A_u8PinNo);
 800032c:	4b23      	ldr	r3, [pc, #140]	; (80003bc <MGPIO_vSetPinOutputType+0xe8>)
 800032e:	685b      	ldr	r3, [r3, #4]
 8000330:	79ba      	ldrb	r2, [r7, #6]
 8000332:	2101      	movs	r1, #1
 8000334:	fa01 f202 	lsl.w	r2, r1, r2
 8000338:	4611      	mov	r1, r2
 800033a:	4a20      	ldr	r2, [pc, #128]	; (80003bc <MGPIO_vSetPinOutputType+0xe8>)
 800033c:	430b      	orrs	r3, r1
 800033e:	6053      	str	r3, [r2, #4]
				break;
 8000340:	e031      	b.n	80003a6 <MGPIO_vSetPinOutputType+0xd2>
		else if(A_u8OutType == GPIO_PUSHPULL)
 8000342:	797b      	ldrb	r3, [r7, #5]
 8000344:	2b00      	cmp	r3, #0
 8000346:	d12d      	bne.n	80003a4 <MGPIO_vSetPinOutputType+0xd0>
			switch(A_u8PortId)
 8000348:	79fb      	ldrb	r3, [r7, #7]
 800034a:	2b02      	cmp	r3, #2
 800034c:	d01e      	beq.n	800038c <MGPIO_vSetPinOutputType+0xb8>
 800034e:	2b02      	cmp	r3, #2
 8000350:	dc29      	bgt.n	80003a6 <MGPIO_vSetPinOutputType+0xd2>
 8000352:	2b00      	cmp	r3, #0
 8000354:	d002      	beq.n	800035c <MGPIO_vSetPinOutputType+0x88>
 8000356:	2b01      	cmp	r3, #1
 8000358:	d00c      	beq.n	8000374 <MGPIO_vSetPinOutputType+0xa0>
}
 800035a:	e024      	b.n	80003a6 <MGPIO_vSetPinOutputType+0xd2>
				CLR_BIT(GPIOA->OTYPER, A_u8PinNo);
 800035c:	4b15      	ldr	r3, [pc, #84]	; (80003b4 <MGPIO_vSetPinOutputType+0xe0>)
 800035e:	685b      	ldr	r3, [r3, #4]
 8000360:	79ba      	ldrb	r2, [r7, #6]
 8000362:	2101      	movs	r1, #1
 8000364:	fa01 f202 	lsl.w	r2, r1, r2
 8000368:	43d2      	mvns	r2, r2
 800036a:	4611      	mov	r1, r2
 800036c:	4a11      	ldr	r2, [pc, #68]	; (80003b4 <MGPIO_vSetPinOutputType+0xe0>)
 800036e:	400b      	ands	r3, r1
 8000370:	6053      	str	r3, [r2, #4]
				break;
 8000372:	e018      	b.n	80003a6 <MGPIO_vSetPinOutputType+0xd2>
				CLR_BIT(GPIOB->OTYPER, A_u8PinNo);
 8000374:	4b10      	ldr	r3, [pc, #64]	; (80003b8 <MGPIO_vSetPinOutputType+0xe4>)
 8000376:	685b      	ldr	r3, [r3, #4]
 8000378:	79ba      	ldrb	r2, [r7, #6]
 800037a:	2101      	movs	r1, #1
 800037c:	fa01 f202 	lsl.w	r2, r1, r2
 8000380:	43d2      	mvns	r2, r2
 8000382:	4611      	mov	r1, r2
 8000384:	4a0c      	ldr	r2, [pc, #48]	; (80003b8 <MGPIO_vSetPinOutputType+0xe4>)
 8000386:	400b      	ands	r3, r1
 8000388:	6053      	str	r3, [r2, #4]
				break;
 800038a:	e00c      	b.n	80003a6 <MGPIO_vSetPinOutputType+0xd2>
				CLR_BIT(GPIOC->OTYPER, A_u8PinNo);
 800038c:	4b0b      	ldr	r3, [pc, #44]	; (80003bc <MGPIO_vSetPinOutputType+0xe8>)
 800038e:	685b      	ldr	r3, [r3, #4]
 8000390:	79ba      	ldrb	r2, [r7, #6]
 8000392:	2101      	movs	r1, #1
 8000394:	fa01 f202 	lsl.w	r2, r1, r2
 8000398:	43d2      	mvns	r2, r2
 800039a:	4611      	mov	r1, r2
 800039c:	4a07      	ldr	r2, [pc, #28]	; (80003bc <MGPIO_vSetPinOutputType+0xe8>)
 800039e:	400b      	ands	r3, r1
 80003a0:	6053      	str	r3, [r2, #4]
				break;
 80003a2:	e000      	b.n	80003a6 <MGPIO_vSetPinOutputType+0xd2>
		}
 80003a4:	bf00      	nop
}
 80003a6:	bf00      	nop
 80003a8:	370c      	adds	r7, #12
 80003aa:	46bd      	mov	sp, r7
 80003ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b0:	4770      	bx	lr
 80003b2:	bf00      	nop
 80003b4:	40020000 	.word	0x40020000
 80003b8:	40020400 	.word	0x40020400
 80003bc:	40020800 	.word	0x40020800

080003c0 <MGPIO_vSetPinOutputSpeed>:

void MGPIO_vSetPinOutputSpeed(u8 A_u8PortId,u8 A_u8PinNo ,u8 A_u8OutSpeed)
{
 80003c0:	b480      	push	{r7}
 80003c2:	b083      	sub	sp, #12
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	4603      	mov	r3, r0
 80003c8:	71fb      	strb	r3, [r7, #7]
 80003ca:	460b      	mov	r3, r1
 80003cc:	71bb      	strb	r3, [r7, #6]
 80003ce:	4613      	mov	r3, r2
 80003d0:	717b      	strb	r3, [r7, #5]
	switch(A_u8PortId)
 80003d2:	79fb      	ldrb	r3, [r7, #7]
 80003d4:	2b02      	cmp	r3, #2
 80003d6:	d036      	beq.n	8000446 <MGPIO_vSetPinOutputSpeed+0x86>
 80003d8:	2b02      	cmp	r3, #2
 80003da:	dc4c      	bgt.n	8000476 <MGPIO_vSetPinOutputSpeed+0xb6>
 80003dc:	2b00      	cmp	r3, #0
 80003de:	d002      	beq.n	80003e6 <MGPIO_vSetPinOutputSpeed+0x26>
 80003e0:	2b01      	cmp	r3, #1
 80003e2:	d018      	beq.n	8000416 <MGPIO_vSetPinOutputSpeed+0x56>
				GPIOC->OSPEEDR |= (A_u8OutSpeed<<(A_u8PinNo*2));

				break;
	}

}
 80003e4:	e047      	b.n	8000476 <MGPIO_vSetPinOutputSpeed+0xb6>
				GPIOA->OSPEEDR &= ~(0b11<<(A_u8PinNo*2));
 80003e6:	4b27      	ldr	r3, [pc, #156]	; (8000484 <MGPIO_vSetPinOutputSpeed+0xc4>)
 80003e8:	689b      	ldr	r3, [r3, #8]
 80003ea:	79ba      	ldrb	r2, [r7, #6]
 80003ec:	0052      	lsls	r2, r2, #1
 80003ee:	2103      	movs	r1, #3
 80003f0:	fa01 f202 	lsl.w	r2, r1, r2
 80003f4:	43d2      	mvns	r2, r2
 80003f6:	4611      	mov	r1, r2
 80003f8:	4a22      	ldr	r2, [pc, #136]	; (8000484 <MGPIO_vSetPinOutputSpeed+0xc4>)
 80003fa:	400b      	ands	r3, r1
 80003fc:	6093      	str	r3, [r2, #8]
				GPIOA->OSPEEDR |= (A_u8OutSpeed<<(A_u8PinNo*2));
 80003fe:	4b21      	ldr	r3, [pc, #132]	; (8000484 <MGPIO_vSetPinOutputSpeed+0xc4>)
 8000400:	689b      	ldr	r3, [r3, #8]
 8000402:	7979      	ldrb	r1, [r7, #5]
 8000404:	79ba      	ldrb	r2, [r7, #6]
 8000406:	0052      	lsls	r2, r2, #1
 8000408:	fa01 f202 	lsl.w	r2, r1, r2
 800040c:	4611      	mov	r1, r2
 800040e:	4a1d      	ldr	r2, [pc, #116]	; (8000484 <MGPIO_vSetPinOutputSpeed+0xc4>)
 8000410:	430b      	orrs	r3, r1
 8000412:	6093      	str	r3, [r2, #8]
				break;
 8000414:	e02f      	b.n	8000476 <MGPIO_vSetPinOutputSpeed+0xb6>
				GPIOB->OSPEEDR &= ~(0b11<<(A_u8PinNo*2));
 8000416:	4b1c      	ldr	r3, [pc, #112]	; (8000488 <MGPIO_vSetPinOutputSpeed+0xc8>)
 8000418:	689b      	ldr	r3, [r3, #8]
 800041a:	79ba      	ldrb	r2, [r7, #6]
 800041c:	0052      	lsls	r2, r2, #1
 800041e:	2103      	movs	r1, #3
 8000420:	fa01 f202 	lsl.w	r2, r1, r2
 8000424:	43d2      	mvns	r2, r2
 8000426:	4611      	mov	r1, r2
 8000428:	4a17      	ldr	r2, [pc, #92]	; (8000488 <MGPIO_vSetPinOutputSpeed+0xc8>)
 800042a:	400b      	ands	r3, r1
 800042c:	6093      	str	r3, [r2, #8]
				GPIOB->OSPEEDR |= (A_u8OutSpeed<<(A_u8PinNo*2));
 800042e:	4b16      	ldr	r3, [pc, #88]	; (8000488 <MGPIO_vSetPinOutputSpeed+0xc8>)
 8000430:	689b      	ldr	r3, [r3, #8]
 8000432:	7979      	ldrb	r1, [r7, #5]
 8000434:	79ba      	ldrb	r2, [r7, #6]
 8000436:	0052      	lsls	r2, r2, #1
 8000438:	fa01 f202 	lsl.w	r2, r1, r2
 800043c:	4611      	mov	r1, r2
 800043e:	4a12      	ldr	r2, [pc, #72]	; (8000488 <MGPIO_vSetPinOutputSpeed+0xc8>)
 8000440:	430b      	orrs	r3, r1
 8000442:	6093      	str	r3, [r2, #8]
				break;
 8000444:	e017      	b.n	8000476 <MGPIO_vSetPinOutputSpeed+0xb6>
				GPIOC->OSPEEDR &= ~(0b11<<(A_u8PinNo*2));
 8000446:	4b11      	ldr	r3, [pc, #68]	; (800048c <MGPIO_vSetPinOutputSpeed+0xcc>)
 8000448:	689b      	ldr	r3, [r3, #8]
 800044a:	79ba      	ldrb	r2, [r7, #6]
 800044c:	0052      	lsls	r2, r2, #1
 800044e:	2103      	movs	r1, #3
 8000450:	fa01 f202 	lsl.w	r2, r1, r2
 8000454:	43d2      	mvns	r2, r2
 8000456:	4611      	mov	r1, r2
 8000458:	4a0c      	ldr	r2, [pc, #48]	; (800048c <MGPIO_vSetPinOutputSpeed+0xcc>)
 800045a:	400b      	ands	r3, r1
 800045c:	6093      	str	r3, [r2, #8]
				GPIOC->OSPEEDR |= (A_u8OutSpeed<<(A_u8PinNo*2));
 800045e:	4b0b      	ldr	r3, [pc, #44]	; (800048c <MGPIO_vSetPinOutputSpeed+0xcc>)
 8000460:	689b      	ldr	r3, [r3, #8]
 8000462:	7979      	ldrb	r1, [r7, #5]
 8000464:	79ba      	ldrb	r2, [r7, #6]
 8000466:	0052      	lsls	r2, r2, #1
 8000468:	fa01 f202 	lsl.w	r2, r1, r2
 800046c:	4611      	mov	r1, r2
 800046e:	4a07      	ldr	r2, [pc, #28]	; (800048c <MGPIO_vSetPinOutputSpeed+0xcc>)
 8000470:	430b      	orrs	r3, r1
 8000472:	6093      	str	r3, [r2, #8]
				break;
 8000474:	bf00      	nop
}
 8000476:	bf00      	nop
 8000478:	370c      	adds	r7, #12
 800047a:	46bd      	mov	sp, r7
 800047c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000480:	4770      	bx	lr
 8000482:	bf00      	nop
 8000484:	40020000 	.word	0x40020000
 8000488:	40020400 	.word	0x40020400
 800048c:	40020800 	.word	0x40020800

08000490 <MGPIO_vSetPinVal>:
		return L_u8PinValue;

}

void MGPIO_vSetPinVal(u8 A_u8PortId,u8 A_u8PinNo,u8 A_u8PinVal)
{
 8000490:	b480      	push	{r7}
 8000492:	b083      	sub	sp, #12
 8000494:	af00      	add	r7, sp, #0
 8000496:	4603      	mov	r3, r0
 8000498:	71fb      	strb	r3, [r7, #7]
 800049a:	460b      	mov	r3, r1
 800049c:	71bb      	strb	r3, [r7, #6]
 800049e:	4613      	mov	r3, r2
 80004a0:	717b      	strb	r3, [r7, #5]
	if(A_u8PinVal == GPIO_HIGH)
 80004a2:	797b      	ldrb	r3, [r7, #5]
 80004a4:	2b01      	cmp	r3, #1
 80004a6:	d12a      	bne.n	80004fe <MGPIO_vSetPinVal+0x6e>
		{
			switch(A_u8PortId)
 80004a8:	79fb      	ldrb	r3, [r7, #7]
 80004aa:	2b02      	cmp	r3, #2
 80004ac:	d01c      	beq.n	80004e8 <MGPIO_vSetPinVal+0x58>
 80004ae:	2b02      	cmp	r3, #2
 80004b0:	dc57      	bgt.n	8000562 <MGPIO_vSetPinVal+0xd2>
 80004b2:	2b00      	cmp	r3, #0
 80004b4:	d002      	beq.n	80004bc <MGPIO_vSetPinVal+0x2c>
 80004b6:	2b01      	cmp	r3, #1
 80004b8:	d00b      	beq.n	80004d2 <MGPIO_vSetPinVal+0x42>
				break;
			}

		}

}
 80004ba:	e052      	b.n	8000562 <MGPIO_vSetPinVal+0xd2>
				SET_BIT(GPIOA->ODR,A_u8PinNo );
 80004bc:	4b2c      	ldr	r3, [pc, #176]	; (8000570 <MGPIO_vSetPinVal+0xe0>)
 80004be:	695b      	ldr	r3, [r3, #20]
 80004c0:	79ba      	ldrb	r2, [r7, #6]
 80004c2:	2101      	movs	r1, #1
 80004c4:	fa01 f202 	lsl.w	r2, r1, r2
 80004c8:	4611      	mov	r1, r2
 80004ca:	4a29      	ldr	r2, [pc, #164]	; (8000570 <MGPIO_vSetPinVal+0xe0>)
 80004cc:	430b      	orrs	r3, r1
 80004ce:	6153      	str	r3, [r2, #20]
				break;
 80004d0:	e047      	b.n	8000562 <MGPIO_vSetPinVal+0xd2>
				SET_BIT(GPIOB->ODR,A_u8PinNo );
 80004d2:	4b28      	ldr	r3, [pc, #160]	; (8000574 <MGPIO_vSetPinVal+0xe4>)
 80004d4:	695b      	ldr	r3, [r3, #20]
 80004d6:	79ba      	ldrb	r2, [r7, #6]
 80004d8:	2101      	movs	r1, #1
 80004da:	fa01 f202 	lsl.w	r2, r1, r2
 80004de:	4611      	mov	r1, r2
 80004e0:	4a24      	ldr	r2, [pc, #144]	; (8000574 <MGPIO_vSetPinVal+0xe4>)
 80004e2:	430b      	orrs	r3, r1
 80004e4:	6153      	str	r3, [r2, #20]
				break;
 80004e6:	e03c      	b.n	8000562 <MGPIO_vSetPinVal+0xd2>
				SET_BIT(GPIOC->ODR,A_u8PinNo );
 80004e8:	4b23      	ldr	r3, [pc, #140]	; (8000578 <MGPIO_vSetPinVal+0xe8>)
 80004ea:	695b      	ldr	r3, [r3, #20]
 80004ec:	79ba      	ldrb	r2, [r7, #6]
 80004ee:	2101      	movs	r1, #1
 80004f0:	fa01 f202 	lsl.w	r2, r1, r2
 80004f4:	4611      	mov	r1, r2
 80004f6:	4a20      	ldr	r2, [pc, #128]	; (8000578 <MGPIO_vSetPinVal+0xe8>)
 80004f8:	430b      	orrs	r3, r1
 80004fa:	6153      	str	r3, [r2, #20]
				break;
 80004fc:	e031      	b.n	8000562 <MGPIO_vSetPinVal+0xd2>
		else if(A_u8PinVal == GPIO_LOW)
 80004fe:	797b      	ldrb	r3, [r7, #5]
 8000500:	2b00      	cmp	r3, #0
 8000502:	d12d      	bne.n	8000560 <MGPIO_vSetPinVal+0xd0>
			switch(A_u8PortId)
 8000504:	79fb      	ldrb	r3, [r7, #7]
 8000506:	2b02      	cmp	r3, #2
 8000508:	d01e      	beq.n	8000548 <MGPIO_vSetPinVal+0xb8>
 800050a:	2b02      	cmp	r3, #2
 800050c:	dc29      	bgt.n	8000562 <MGPIO_vSetPinVal+0xd2>
 800050e:	2b00      	cmp	r3, #0
 8000510:	d002      	beq.n	8000518 <MGPIO_vSetPinVal+0x88>
 8000512:	2b01      	cmp	r3, #1
 8000514:	d00c      	beq.n	8000530 <MGPIO_vSetPinVal+0xa0>
}
 8000516:	e024      	b.n	8000562 <MGPIO_vSetPinVal+0xd2>
				CLR_BIT(GPIOA->ODR,A_u8PinNo );
 8000518:	4b15      	ldr	r3, [pc, #84]	; (8000570 <MGPIO_vSetPinVal+0xe0>)
 800051a:	695b      	ldr	r3, [r3, #20]
 800051c:	79ba      	ldrb	r2, [r7, #6]
 800051e:	2101      	movs	r1, #1
 8000520:	fa01 f202 	lsl.w	r2, r1, r2
 8000524:	43d2      	mvns	r2, r2
 8000526:	4611      	mov	r1, r2
 8000528:	4a11      	ldr	r2, [pc, #68]	; (8000570 <MGPIO_vSetPinVal+0xe0>)
 800052a:	400b      	ands	r3, r1
 800052c:	6153      	str	r3, [r2, #20]
				break;
 800052e:	e018      	b.n	8000562 <MGPIO_vSetPinVal+0xd2>
				CLR_BIT(GPIOB->ODR,A_u8PinNo );
 8000530:	4b10      	ldr	r3, [pc, #64]	; (8000574 <MGPIO_vSetPinVal+0xe4>)
 8000532:	695b      	ldr	r3, [r3, #20]
 8000534:	79ba      	ldrb	r2, [r7, #6]
 8000536:	2101      	movs	r1, #1
 8000538:	fa01 f202 	lsl.w	r2, r1, r2
 800053c:	43d2      	mvns	r2, r2
 800053e:	4611      	mov	r1, r2
 8000540:	4a0c      	ldr	r2, [pc, #48]	; (8000574 <MGPIO_vSetPinVal+0xe4>)
 8000542:	400b      	ands	r3, r1
 8000544:	6153      	str	r3, [r2, #20]
				break;
 8000546:	e00c      	b.n	8000562 <MGPIO_vSetPinVal+0xd2>
				CLR_BIT(GPIOC->ODR,A_u8PinNo );
 8000548:	4b0b      	ldr	r3, [pc, #44]	; (8000578 <MGPIO_vSetPinVal+0xe8>)
 800054a:	695b      	ldr	r3, [r3, #20]
 800054c:	79ba      	ldrb	r2, [r7, #6]
 800054e:	2101      	movs	r1, #1
 8000550:	fa01 f202 	lsl.w	r2, r1, r2
 8000554:	43d2      	mvns	r2, r2
 8000556:	4611      	mov	r1, r2
 8000558:	4a07      	ldr	r2, [pc, #28]	; (8000578 <MGPIO_vSetPinVal+0xe8>)
 800055a:	400b      	ands	r3, r1
 800055c:	6153      	str	r3, [r2, #20]
				break;
 800055e:	e000      	b.n	8000562 <MGPIO_vSetPinVal+0xd2>
		}
 8000560:	bf00      	nop
}
 8000562:	bf00      	nop
 8000564:	370c      	adds	r7, #12
 8000566:	46bd      	mov	sp, r7
 8000568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800056c:	4770      	bx	lr
 800056e:	bf00      	nop
 8000570:	40020000 	.word	0x40020000
 8000574:	40020400 	.word	0x40020400
 8000578:	40020800 	.word	0x40020800

0800057c <MRCC_vInit>:
#include "../../LIB/STD_TYPES.h"
#include "../../LIB/BIT_MATH.h"


void MRCC_vInit(void)
{
 800057c:	b480      	push	{r7}
 800057e:	b083      	sub	sp, #12
 8000580:	af00      	add	r7, sp, #0
	// 1- CSS (on/off)
	SET_BIT(RCC->CR,CSSON);
 8000582:	4b15      	ldr	r3, [pc, #84]	; (80005d8 <MRCC_vInit+0x5c>)
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	4a14      	ldr	r2, [pc, #80]	; (80005d8 <MRCC_vInit+0x5c>)
 8000588:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800058c:	6013      	str	r3, [r2, #0]

	// 2- DISABLE HSE ByPass(RCC_CR)
	CLR_BIT(RCC->CFGR,HSEBYP);
 800058e:	4b12      	ldr	r3, [pc, #72]	; (80005d8 <MRCC_vInit+0x5c>)
 8000590:	689b      	ldr	r3, [r3, #8]
 8000592:	4a11      	ldr	r2, [pc, #68]	; (80005d8 <MRCC_vInit+0x5c>)
 8000594:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000598:	6093      	str	r3, [r2, #8]

	// 3- Select clock (RCC_CFGR) (HSI or HSE or PLL)
	SET_BIT(RCC->CFGR,SW0);
 800059a:	4b0f      	ldr	r3, [pc, #60]	; (80005d8 <MRCC_vInit+0x5c>)
 800059c:	689b      	ldr	r3, [r3, #8]
 800059e:	4a0e      	ldr	r2, [pc, #56]	; (80005d8 <MRCC_vInit+0x5c>)
 80005a0:	f043 0301 	orr.w	r3, r3, #1
 80005a4:	6093      	str	r3, [r2, #8]


	// 4- Bus pre-scalar & PLL Configuration (RCC_PLLCFGR)
	// 4.0 Check F_MAX:
	u32 GEN_clock_output = (RCC_PLL_BASIC_CLOCK_INPUT_MHZ*RCC_PLLN_MHZ_CFG)/(RCC_PLLM_MHZ_CFG*RCC_PLLP_MHZ_CFG);
 80005a6:	2354      	movs	r3, #84	; 0x54
 80005a8:	607b      	str	r3, [r7, #4]

	if (GEN_clock_output<=RCC_PLL_BASIC_CLOCK_INPUT_MHZ)
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	2b10      	cmp	r3, #16
 80005ae:	d901      	bls.n	80005b4 <MRCC_vInit+0x38>
	{
		//GEN_clock_output;
	}
	else
	{
		GEN_clock_output=RCC_PLL_BASIC_CLOCK_INPUT_MHZ;
 80005b0:	2310      	movs	r3, #16
 80005b2:	607b      	str	r3, [r7, #4]
	}
	// 4.1 Config "PLLP" Bits:
	RCC_PLLCFGR_PLL_P();
 80005b4:	4b08      	ldr	r3, [pc, #32]	; (80005d8 <MRCC_vInit+0x5c>)
 80005b6:	685b      	ldr	r3, [r3, #4]
	// 4.2 Config "PLLN" Bits:
	RCC_PLLCFGR_PLL_N();
 80005b8:	4b07      	ldr	r3, [pc, #28]	; (80005d8 <MRCC_vInit+0x5c>)
 80005ba:	685b      	ldr	r3, [r3, #4]
	// 4.3 Config "PLLM" Bits:
	RCC_PLLCFGR_PLL_M();
 80005bc:	4b06      	ldr	r3, [pc, #24]	; (80005d8 <MRCC_vInit+0x5c>)
 80005be:	685b      	ldr	r3, [r3, #4]



	// 5- enable the selected clock (RCC_CR)
#if RCC_HSE_ENABLE == ENABLE
	SET_BIT(RCC->CR,HSEON);
 80005c0:	4b05      	ldr	r3, [pc, #20]	; (80005d8 <MRCC_vInit+0x5c>)
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	4a04      	ldr	r2, [pc, #16]	; (80005d8 <MRCC_vInit+0x5c>)
 80005c6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80005ca:	6013      	str	r3, [r2, #0]
#endif


}
 80005cc:	bf00      	nop
 80005ce:	370c      	adds	r7, #12
 80005d0:	46bd      	mov	sp, r7
 80005d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d6:	4770      	bx	lr
 80005d8:	40023800 	.word	0x40023800

080005dc <MRCC_vEnableClock>:

//(RCC_AHB1ENR)
void MRCC_vEnableClock(u32 A_u32BusId, u32 A_u32PeripheralId)
{
 80005dc:	b480      	push	{r7}
 80005de:	b083      	sub	sp, #12
 80005e0:	af00      	add	r7, sp, #0
 80005e2:	6078      	str	r0, [r7, #4]
 80005e4:	6039      	str	r1, [r7, #0]
	switch(A_u32BusId)
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	2b03      	cmp	r3, #3
 80005ea:	d837      	bhi.n	800065c <MRCC_vEnableClock+0x80>
 80005ec:	a201      	add	r2, pc, #4	; (adr r2, 80005f4 <MRCC_vEnableClock+0x18>)
 80005ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80005f2:	bf00      	nop
 80005f4:	08000605 	.word	0x08000605
 80005f8:	0800061b 	.word	0x0800061b
 80005fc:	08000631 	.word	0x08000631
 8000600:	08000647 	.word	0x08000647
	{
	case RCC_AHB1:
		SET_BIT(RCC->AHB1ENR,A_u32PeripheralId ) ;
 8000604:	4b19      	ldr	r3, [pc, #100]	; (800066c <MRCC_vEnableClock+0x90>)
 8000606:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000608:	2101      	movs	r1, #1
 800060a:	683a      	ldr	r2, [r7, #0]
 800060c:	fa01 f202 	lsl.w	r2, r1, r2
 8000610:	4611      	mov	r1, r2
 8000612:	4a16      	ldr	r2, [pc, #88]	; (800066c <MRCC_vEnableClock+0x90>)
 8000614:	430b      	orrs	r3, r1
 8000616:	6313      	str	r3, [r2, #48]	; 0x30
		break;
 8000618:	e021      	b.n	800065e <MRCC_vEnableClock+0x82>
	case RCC_AHB2:
		SET_BIT(RCC->AHB2ENR,A_u32PeripheralId ) ;
 800061a:	4b14      	ldr	r3, [pc, #80]	; (800066c <MRCC_vEnableClock+0x90>)
 800061c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800061e:	2101      	movs	r1, #1
 8000620:	683a      	ldr	r2, [r7, #0]
 8000622:	fa01 f202 	lsl.w	r2, r1, r2
 8000626:	4611      	mov	r1, r2
 8000628:	4a10      	ldr	r2, [pc, #64]	; (800066c <MRCC_vEnableClock+0x90>)
 800062a:	430b      	orrs	r3, r1
 800062c:	6353      	str	r3, [r2, #52]	; 0x34
		break;
 800062e:	e016      	b.n	800065e <MRCC_vEnableClock+0x82>
	case RCC_APB1:
		SET_BIT(RCC->APB1ENR,A_u32PeripheralId ) ;
 8000630:	4b0e      	ldr	r3, [pc, #56]	; (800066c <MRCC_vEnableClock+0x90>)
 8000632:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000634:	2101      	movs	r1, #1
 8000636:	683a      	ldr	r2, [r7, #0]
 8000638:	fa01 f202 	lsl.w	r2, r1, r2
 800063c:	4611      	mov	r1, r2
 800063e:	4a0b      	ldr	r2, [pc, #44]	; (800066c <MRCC_vEnableClock+0x90>)
 8000640:	430b      	orrs	r3, r1
 8000642:	6413      	str	r3, [r2, #64]	; 0x40
		break;
 8000644:	e00b      	b.n	800065e <MRCC_vEnableClock+0x82>
	case RCC_APB2:
		SET_BIT(RCC->APB2ENR,A_u32PeripheralId ) ;
 8000646:	4b09      	ldr	r3, [pc, #36]	; (800066c <MRCC_vEnableClock+0x90>)
 8000648:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800064a:	2101      	movs	r1, #1
 800064c:	683a      	ldr	r2, [r7, #0]
 800064e:	fa01 f202 	lsl.w	r2, r1, r2
 8000652:	4611      	mov	r1, r2
 8000654:	4a05      	ldr	r2, [pc, #20]	; (800066c <MRCC_vEnableClock+0x90>)
 8000656:	430b      	orrs	r3, r1
 8000658:	6453      	str	r3, [r2, #68]	; 0x44
		break;
 800065a:	e000      	b.n	800065e <MRCC_vEnableClock+0x82>
	default:
		/* Error: Bus ID out of range */
		break;
 800065c:	bf00      	nop
	}

}
 800065e:	bf00      	nop
 8000660:	370c      	adds	r7, #12
 8000662:	46bd      	mov	sp, r7
 8000664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000668:	4770      	bx	lr
 800066a:	bf00      	nop
 800066c:	40023800 	.word	0x40023800

08000670 <main>:
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


int main(void)
{
 8000670:	b580      	push	{r7, lr}
 8000672:	af00      	add	r7, sp, #0
	MRCC_vInit();
 8000674:	f7ff ff82 	bl	800057c <MRCC_vInit>

	MRCC_vEnableClock(RCC_AHB1, RCC_GPIOAEN);
 8000678:	2100      	movs	r1, #0
 800067a:	2000      	movs	r0, #0
 800067c:	f7ff ffae 	bl	80005dc <MRCC_vEnableClock>

	MGPIO_vSetPinMode(GPIO_PORTA, 0, GPIO_MODE_OUTPUT );
 8000680:	2201      	movs	r2, #1
 8000682:	2100      	movs	r1, #0
 8000684:	2000      	movs	r0, #0
 8000686:	f7ff fdbd 	bl	8000204 <MGPIO_vSetPinMode>
	MGPIO_vSetPinOutputSpeed(GPIO_PORTA, 0,GPIO_LOW_SPEED);
 800068a:	2200      	movs	r2, #0
 800068c:	2100      	movs	r1, #0
 800068e:	2000      	movs	r0, #0
 8000690:	f7ff fe96 	bl	80003c0 <MGPIO_vSetPinOutputSpeed>
	MGPIO_vSetPinOutputType(GPIO_PORTA, 0, GPIO_PUSHPULL);
 8000694:	2200      	movs	r2, #0
 8000696:	2100      	movs	r1, #0
 8000698:	2000      	movs	r0, #0
 800069a:	f7ff fe1b 	bl	80002d4 <MGPIO_vSetPinOutputType>
	MGPIO_vSetPinVal(GPIO_PORTA, 0,GPIO_HIGH);
 800069e:	2201      	movs	r2, #1
 80006a0:	2100      	movs	r1, #0
 80006a2:	2000      	movs	r0, #0
 80006a4:	f7ff fef4 	bl	8000490 <MGPIO_vSetPinVal>

	while(1)
 80006a8:	e7fe      	b.n	80006a8 <main+0x38>
	...

080006ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006ac:	480d      	ldr	r0, [pc, #52]	; (80006e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006b4:	480c      	ldr	r0, [pc, #48]	; (80006e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80006b6:	490d      	ldr	r1, [pc, #52]	; (80006ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80006b8:	4a0d      	ldr	r2, [pc, #52]	; (80006f0 <LoopForever+0xe>)
  movs r3, #0
 80006ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006bc:	e002      	b.n	80006c4 <LoopCopyDataInit>

080006be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006c2:	3304      	adds	r3, #4

080006c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006c8:	d3f9      	bcc.n	80006be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006ca:	4a0a      	ldr	r2, [pc, #40]	; (80006f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006cc:	4c0a      	ldr	r4, [pc, #40]	; (80006f8 <LoopForever+0x16>)
  movs r3, #0
 80006ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006d0:	e001      	b.n	80006d6 <LoopFillZerobss>

080006d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006d4:	3204      	adds	r2, #4

080006d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006d8:	d3fb      	bcc.n	80006d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006da:	f000 f811 	bl	8000700 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006de:	f7ff ffc7 	bl	8000670 <main>

080006e2 <LoopForever>:

LoopForever:
    b LoopForever
 80006e2:	e7fe      	b.n	80006e2 <LoopForever>
  ldr   r0, =_estack
 80006e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80006e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006ec:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80006f0:	08000768 	.word	0x08000768
  ldr r2, =_sbss
 80006f4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80006f8:	2000001c 	.word	0x2000001c

080006fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006fc:	e7fe      	b.n	80006fc <ADC_IRQHandler>
	...

08000700 <__libc_init_array>:
 8000700:	b570      	push	{r4, r5, r6, lr}
 8000702:	4d0d      	ldr	r5, [pc, #52]	; (8000738 <__libc_init_array+0x38>)
 8000704:	4c0d      	ldr	r4, [pc, #52]	; (800073c <__libc_init_array+0x3c>)
 8000706:	1b64      	subs	r4, r4, r5
 8000708:	10a4      	asrs	r4, r4, #2
 800070a:	2600      	movs	r6, #0
 800070c:	42a6      	cmp	r6, r4
 800070e:	d109      	bne.n	8000724 <__libc_init_array+0x24>
 8000710:	4d0b      	ldr	r5, [pc, #44]	; (8000740 <__libc_init_array+0x40>)
 8000712:	4c0c      	ldr	r4, [pc, #48]	; (8000744 <__libc_init_array+0x44>)
 8000714:	f000 f818 	bl	8000748 <_init>
 8000718:	1b64      	subs	r4, r4, r5
 800071a:	10a4      	asrs	r4, r4, #2
 800071c:	2600      	movs	r6, #0
 800071e:	42a6      	cmp	r6, r4
 8000720:	d105      	bne.n	800072e <__libc_init_array+0x2e>
 8000722:	bd70      	pop	{r4, r5, r6, pc}
 8000724:	f855 3b04 	ldr.w	r3, [r5], #4
 8000728:	4798      	blx	r3
 800072a:	3601      	adds	r6, #1
 800072c:	e7ee      	b.n	800070c <__libc_init_array+0xc>
 800072e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000732:	4798      	blx	r3
 8000734:	3601      	adds	r6, #1
 8000736:	e7f2      	b.n	800071e <__libc_init_array+0x1e>
 8000738:	08000760 	.word	0x08000760
 800073c:	08000760 	.word	0x08000760
 8000740:	08000760 	.word	0x08000760
 8000744:	08000764 	.word	0x08000764

08000748 <_init>:
 8000748:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800074a:	bf00      	nop
 800074c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800074e:	bc08      	pop	{r3}
 8000750:	469e      	mov	lr, r3
 8000752:	4770      	bx	lr

08000754 <_fini>:
 8000754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000756:	bf00      	nop
 8000758:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800075a:	bc08      	pop	{r3}
 800075c:	469e      	mov	lr, r3
 800075e:	4770      	bx	lr
